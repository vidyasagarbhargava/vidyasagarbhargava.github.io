{
  "hash": "4dc90bb77d43ba242b1acbfe2e8d050b",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Data Analysis \"\ndescription: \"A way of summarizing, interpreting and visualizing the information hidden in rows and column format.\"\nauthor: \"Vidyasagar Bhargava\"\ndate: \"06/11/2019\"\ncategories:\n  - eda\n  - python\nformat:\n    html:\n        code-fold: false\njupyter: python3\nexecute: \n  enabled: true\ntitle-block-banner: true\n---\n\n![](https://i.imgur.com/VxwKjYQ.gif)\n\n### Why EDA is important ?\n\nUsually we start any data science project with understanding the business problem and then we generate hypothesis. During hypothesis generation we look for factors which influence our dependent variable. EDA helps in confirming and validating those hypothesis.\n\nIt helps to find out unexpected pattern in data which must be taken into account, thereby suggesting some changes in planned analysis.\n\nIt helps in delivering data driven insights to business stakeholders by confirming they are asking the right questions and not biasing the investigation with their assumptions.\n\n### How to EDA\nI divide exploratory data analysis in 3 parts of investigation. \n\n1. *Structure Investigation* : Exploring shape and as well as data types.  \n2. *Quality Investigation* : To check general quality of datasets in regard to duplicates,missing values and unwanted entries.  \n3. *Content Investigation* : More indepth study of features and how they relate to each other.  \n\n### Example Case\n\nLet's download some data and perform eda to bring insights as well know quality of the data.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.datasets import fetch_openml\n\n# Download the dataset from openml\ndataset = fetch_openml(data_id=42803, as_frame=True)\n\n# Extract feature matrix X and show 5 random samples\ndf_X = dataset[\"frame\"]\ndf_X\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accident_Index</th>\n      <th>Vehicle_Reference_df_res</th>\n      <th>Vehicle_Type</th>\n      <th>Towing_and_Articulation</th>\n      <th>Vehicle_Manoeuvre</th>\n      <th>Vehicle_Location-Restricted_Lane</th>\n      <th>Junction_Location</th>\n      <th>Skidding_and_Overturning</th>\n      <th>Hit_Object_in_Carriageway</th>\n      <th>Vehicle_Leaving_Carriageway</th>\n      <th>...</th>\n      <th>Age_Band_of_Casualty</th>\n      <th>Casualty_Severity</th>\n      <th>Pedestrian_Location</th>\n      <th>Pedestrian_Movement</th>\n      <th>Car_Passenger</th>\n      <th>Bus_or_Coach_Passenger</th>\n      <th>Pedestrian_Road_Maintenance_Worker</th>\n      <th>Casualty_Type</th>\n      <th>Casualty_Home_Area_Type</th>\n      <th>Casualty_IMD_Decile</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>201501BS70001</td>\n      <td>1.0</td>\n      <td>19.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>201501BS70002</td>\n      <td>1.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>9.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>201501BS70004</td>\n      <td>1.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>201501BS70005</td>\n      <td>1.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>201501BS70008</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>8.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>363238</th>\n      <td>2015984141415</td>\n      <td>13.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>363239</th>\n      <td>2015984141415</td>\n      <td>13.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>363240</th>\n      <td>2015984141415</td>\n      <td>13.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>363241</th>\n      <td>2015984141415</td>\n      <td>13.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>363242</th>\n      <td>2015984141415</td>\n      <td>13.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>1.0</td>\n      <td>4.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>363243 rows Ã— 67 columns</p>\n</div>\n```\n:::\n:::\n\n\n### Structure Investigation\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf_X.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n(363243, 67)\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\npd.value_counts(df_X.dtypes)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nfloat64    61\nobject      6\ndtype: int64\n```\n:::\n:::\n\n\n### Structure of Non Numerical Features\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Display non-numerical features\ndf_X.select_dtypes(exclude=\"number\").head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accident_Index</th>\n      <th>Sex_of_Driver</th>\n      <th>Date</th>\n      <th>Time</th>\n      <th>Local_Authority_(Highway)</th>\n      <th>LSOA_of_Accident_Location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>201501BS70001</td>\n      <td>1.0</td>\n      <td>12/01/2015</td>\n      <td>18:45</td>\n      <td>E09000020</td>\n      <td>E01002825</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>201501BS70002</td>\n      <td>1.0</td>\n      <td>12/01/2015</td>\n      <td>07:50</td>\n      <td>E09000020</td>\n      <td>E01002820</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>201501BS70004</td>\n      <td>1.0</td>\n      <td>12/01/2015</td>\n      <td>18:08</td>\n      <td>E09000020</td>\n      <td>E01002833</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>201501BS70005</td>\n      <td>1.0</td>\n      <td>13/01/2015</td>\n      <td>07:40</td>\n      <td>E09000020</td>\n      <td>E01002874</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>201501BS70008</td>\n      <td>1.0</td>\n      <td>09/01/2015</td>\n      <td>07:30</td>\n      <td>E09000020</td>\n      <td>E01002814</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Changes data type of 'Sex_of_Driver'\ndf_X[\"Sex_of_Driver\"] = df_X[\"Sex_of_Driver\"].astype(\"float\")\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndf_X.describe(exclude=\"number\")\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accident_Index</th>\n      <th>Date</th>\n      <th>Time</th>\n      <th>Local_Authority_(Highway)</th>\n      <th>LSOA_of_Accident_Location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>363243</td>\n      <td>319866</td>\n      <td>319822</td>\n      <td>319866</td>\n      <td>298758</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>140056</td>\n      <td>365</td>\n      <td>1439</td>\n      <td>204</td>\n      <td>25979</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>201543P296025</td>\n      <td>14/02/2015</td>\n      <td>17:30</td>\n      <td>E10000017</td>\n      <td>E01028497</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>1332</td>\n      <td>2144</td>\n      <td>2972</td>\n      <td>8457</td>\n      <td>1456</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Structure of Numerical Features\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# from matplotlib.offsetbox import AnnotationBbox, OffsetImage\n# import matplotlib.image as mpimg\n# def insert_image(path, zoom, xybox, ax):\n#     '''Insert an image within matplotlib'''\n#     imagebox = OffsetImage(mpimg.imread(path), zoom=zoom)\n#     ab = AnnotationBbox(imagebox, xy=(0.5, 0.7), frameon=False, pad=1, xybox=xybox)\n#     ax.add_artist(ab)\n\n\n```\n:::\n\n\n::: {.cell .column-body execution_count=8}\n``` {.python .cell-code}\n# For each numerical feature compute number of unique entries\nsns.set(rc={'axes.facecolor':'#e6ddde', 'figure.facecolor':'#e6ddde'})\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\nunique_values = df_X.select_dtypes(include=\"number\").nunique().sort_values()\n\n# Plot information with y-axis in log-scale\nunique_values.plot.bar(logy=True, figsize=(15, 4), title=\"Unique values per feature\",  color='#753742');\n```\n\n::: {.cell-output .cell-output-display}\n![](eda_files/figure-html/cell-9-output-1.png){width=1171 height=648}\n:::\n:::\n\n\n### Quality Investigation\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Check number of duplicates while ignoring the index feature\nn_duplicates = df_X.drop(labels=[\"Accident_Index\"], axis=1).duplicated().sum()\nprint(f\"You seem to have {n_duplicates} duplicates in your database.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nYou seem to have 22 duplicates in your database.\n```\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n#  Extract column names of all features, except 'Accident_Index'\ncolumns_to_consider = df_X.drop(labels=[\"Accident_Index\"], axis=1).columns\n\n# Drop duplicates based on 'columns_to_consider'\ndf_X = df_X.drop_duplicates(subset=columns_to_consider)\ndf_X.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n(363221, 67)\n```\n:::\n:::\n\n\n### Missing Values\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n# For each numerical feature compute number of unique entries\nsns.set(rc={'axes.facecolor':'#e6ddde', 'figure.facecolor':'#e6ddde'})\nplt.figure(figsize=(8, 8))\nplt.imshow(df_X.isna(), aspect=\"auto\", interpolation=\"nearest\")\nplt.xlabel(\"Column Number\")\nplt.ylabel(\"Sample Number\");\n```\n\n::: {.cell-output .cell-output-display}\n![](eda_files/figure-html/cell-12-output-1.png){width=696 height=651}\n:::\n:::\n\n\n\n",
    "supporting": [
      "eda_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}